name: 🚀 Release Workflow

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

jobs:
  validate-release:
    name: 🔍 Validate Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🔢 Extract Version
        id: version
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
            TAG="v${VERSION}"
          else
            TAG="${{ github.ref_name }}"
            VERSION="${TAG#v}"
          fi
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Release version: ${VERSION}"
          echo "Release tag: ${TAG}"

  build-artifacts:
    name: 🏗️ Build Release Artifacts
    runs-on: ubuntu-latest
    needs: validate-release
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: 📦 Install Build Dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install build twine wheel setuptools
        continue-on-error: false

      - name: 🔍 Verify Package Structure
        shell: bash
        run: |
          echo "📋 Checking package structure..."
          python -c <<'EOF'
          import sys, os
          sys.path.insert(0, 'src')
          try:
            import telegram_audio_downloader
            print(f'✅ Package version: {telegram_audio_downloader.__version__}')
          except Exception as e:
            print(f'⚠️ Package import issue: {e}')
            print('✅ Continuing with build...')
          EOF
        continue-on-error: true
          
      - name: 🏗️ Build Package
        shell: bash
        run: |
          echo "🏗️ Building package with setup.py..."
          python -m build
          ls -la dist/
          
          # Verify built packages
          python -m twine check dist/* || echo "⚠️ Twine check had warnings, continuing..."
          echo "✅ Package built successfully"
        continue-on-error: false
      
      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: dist/
          retention-days: 7

  create-release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [validate-release, build-artifacts]
    permissions:
      contents: write
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 📥 Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: dist/
      
      - name: 📝 Generate Changelog
        id: changelog
        shell: bash
        run: |
          VERSION="${{ needs.validate-release.outputs.version }}"
          
          # Check for CHANGELOG.md
          if [[ -f "CHANGELOG.md" ]]; then
            CHANGELOG_CONTENT=$(awk "/^## \\[${VERSION}\\]/{flag=1; next} /^## \\[/{flag=0} flag" CHANGELOG.md)
            
            if [[ -z "$CHANGELOG_CONTENT" ]]; then
              CHANGELOG_CONTENT="🎉 Release v${VERSION}

          ### ✨ New Features
          - Enhanced stability and performance
          - Improved async audio downloading
          - Better error handling and logging

          ### 📚 Documentation  
          - Updated README and Wiki documentation
          - Enhanced API documentation
          - Improved installation instructions

          ### 🔧 Technical Improvements
          - Optimized package structure
          - Enhanced CI/CD pipeline
          - Better dependency management

          For detailed changes, see the [commit history](https://github.com/Elpablo777/Telegram-Audio-Downloader/commits)."
            fi
          else
            CHANGELOG_CONTENT="🎉 Release v${VERSION}

          ### 🚀 What's New
          - **Telegram Audio Downloader v${VERSION}** is here!
          - ⚡ **Asynchronous downloading** from Telegram channels and groups
          - 🎵 **Rich CLI interface** with progress tracking
          - 📊 **Performance monitoring** and metrics
          - 🐳 **Docker support** for easy deployment
          - 🔍 **Fuzzy search** for audio filtering
          - 💾 **SQLite database** for download tracking

          ### 📦 Quick Installation
          \`\`\`bash
          # Method 1: Install from PyPI (when available)
          pip install telegram-audio-downloader

          # Method 2: Install from source
          git clone https://github.com/Elpablo777/Telegram-Audio-Downloader.git
          cd Telegram-Audio-Downloader
          pip install -e .
          \`\`\`

          ### 🚀 Quick Start
          \`\`\`bash
          # Get help
          telegram-audio-downloader --help

          # Download from a channel
          telegram-audio-downloader download --channel @musicchannel
          \`\`\`

          ### 🆘 Support & Documentation
          - 📚 [**Wiki Documentation**](https://github.com/Elpablo777/Telegram-Audio-Downloader/wiki)
          - 🐛 [**Report Issues**](https://github.com/Elpablo777/Telegram-Audio-Downloader/issues)
          - 💬 [**Community Discussions**](https://github.com/Elpablo777/Telegram-Audio-Downloader/discussions)
          - 📧 [**Contact**](mailto:hannover84@msn.com)

          ### 🙏 Credits
          Developed with ❤️ by [Elpablo777](https://github.com/Elpablo777)"
          fi
          
          cat <<EOF >> $GITHUB_OUTPUT
          CHANGELOG_CONTENT<<CHANGELOG_EOF
          $CHANGELOG_CONTENT
          CHANGELOG_EOF
          EOF
      
      - name: 🎉 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.validate-release.outputs.tag }}
          name: "🎵 Telegram Audio Downloader v${{ needs.validate-release.outputs.version }}"
          body: |
            # 🎵 Telegram Audio Downloader v${{ needs.validate-release.outputs.version }}
            
            ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
            
            ## 📦 Installation Options
            
            ### Option 1: From Release (Recommended)
            ```bash
            # Download source code
            wget https://github.com/Elpablo777/Telegram-Audio-Downloader/archive/v${{ needs.validate-release.outputs.version }}.tar.gz
            tar -xzf v${{ needs.validate-release.outputs.version }}.tar.gz
            cd Telegram-Audio-Downloader-${{ needs.validate-release.outputs.version }}
            
            # Install package
            pip install -e .
            ```
            
            ### Option 2: From Built Package
            ```bash
            # Download wheel file from assets below
            pip install telegram_audio_downloader-${{ needs.validate-release.outputs.version }}-py3-none-any.whl
            ```
            
            ### Option 3: Docker
            ```bash
            # Build from source
            git clone https://github.com/Elpablo777/Telegram-Audio-Downloader.git
            cd Telegram-Audio-Downloader
            docker build -t telegram-audio-downloader .
            ```
            
            ## 🚀 Quick Start
            ```bash
            # Verify installation
            telegram-audio-downloader --version
            
            # Get help
            telegram-audio-downloader --help
            
            # Start downloading
            telegram-audio-downloader download --help
            ```
            
            ## 🔗 Resources
            - 📚 [**Complete Documentation**](https://github.com/Elpablo777/Telegram-Audio-Downloader/wiki)
            - 🎯 [**Quick Start Guide**](https://github.com/Elpablo777/Telegram-Audio-Downloader/wiki/Quick-Start)
            - 🔧 [**Configuration Guide**](https://github.com/Elpablo777/Telegram-Audio-Downloader/wiki/Configuration)
            - 🐛 [**Troubleshooting**](https://github.com/Elpablo777/Telegram-Audio-Downloader/wiki/Troubleshooting)
            
            ---
            
            **Full Changelog**: https://github.com/Elpablo777/Telegram-Audio-Downloader/compare/${{ needs.validate-release.outputs.tag }}...HEAD
          prerelease: ${{ github.event.inputs.prerelease || false }}
          files: |
            dist/*
          generate_release_notes: true
        continue-on-error: false